/**
 * This file was automatically generated by @cosmwasm/ts-codegen@1.11.1.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */

export type Decimal = string;
export type Pair = [string, string];
export interface InstantiateMsg {
  auction_strategy: AuctionStrategy;
  chain_halt_config: ChainHaltConfig;
  pair: Pair;
  price_freshness_strategy: PriceFreshnessStrategy;
}
export interface AuctionStrategy {
  end_price_perc: number;
  start_price_perc: number;
}
export interface ChainHaltConfig {
  block_avg: Decimal;
  cap: number;
}
export interface PriceFreshnessStrategy {
  limit: Decimal;
  multipliers: [Decimal, Decimal][];
}
export type ExecuteMsg =
  | {
      auction_funds_manager: {
        sender: Addr;
      };
    }
  | {
      auction_funds: {};
    }
  | {
      withdraw_funds_manager: {
        sender: Addr;
      };
    }
  | {
      withdraw_funds: {};
    }
  | {
      bid: {};
    }
  | {
      finish_auction: {
        limit: number;
      };
    }
  | {
      clean_after_auction: {};
    }
  | {
      admin: AdminMsgs;
    };
export type Addr = string;
export type AdminMsgs =
  | "pause_auction"
  | "resume_auction"
  | {
      update_strategy: {
        strategy: AuctionStrategy;
      };
    }
  | {
      start_auction: NewAuctionParams;
    }
  | {
      update_chain_halt_config: ChainHaltConfig;
    }
  | {
      update_price_freshness_strategy: PriceFreshnessStrategy;
    };
export interface NewAuctionParams {
  end_block: number;
  start_block?: number | null;
}
export type QueryMsg =
  | ("get_admin" | "get_mm_data")
  | "get_config"
  | {
      get_funds_amount: {
        addr: string;
      };
    }
  | "get_auction"
  | "get_price"
  | "get_strategy";
export type Uint128 = string;
export type Timestamp = Uint64;
export type Uint64 = string;
export type ActiveAuctionStatus =
  | "started"
  | "finished"
  | {
      close_auction: [Addr | null, Uint128, Uint128];
    }
  | "auction_closed";
export interface ActiveAuction {
  available_amount: Uint128;
  end_block: number;
  end_price: Decimal;
  last_checked_block: BlockInfo;
  leftovers: [Uint128, Uint128];
  resolved_amount: Uint128;
  start_block: number;
  start_price: Decimal;
  status: ActiveAuctionStatus;
  total_amount: Uint128;
}
export interface BlockInfo {
  chain_id: string;
  height: number;
  time: Timestamp;
  [k: string]: unknown;
}
export interface AuctionConfig {
  chain_halt_config: ChainHaltConfig;
  is_paused: boolean;
  pair: Pair;
  price_freshness_strategy: PriceFreshnessStrategy;
}
export interface GetFundsAmountResponse {
  curr: Uint128;
  next: Uint128;
}
export interface GetMmResponse {
  available_amount: Uint128;
  block: BlockInfo;
  end_block: number;
  price: Decimal;
  status: ActiveAuctionStatus;
}
export interface GetPriceResponse {
  price: Decimal;
  time: Timestamp;
}
