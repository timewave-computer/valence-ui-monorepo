/**
 * This file was automatically generated by @cosmwasm/ts-codegen@1.11.1.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */

export type Uint128 = string;
export interface InstantiateMsg {
  auction_strategy: AuctionStrategy;
  chain_halt_config: ChainHaltConfig;
  pair: Pair;
  price_freshness_strategy: PriceFreshnessStrategy;
}
export interface MinAmount {
  send: Uint128;
  start_auction: Uint128;
}
export type ExecuteMsg =
  | {
      auction_funds: {
        pair: Pair;
      };
    }
  | {
      withdraw_funds: {
        pair: Pair;
      };
    }
  | {
      finish_auction: {
        limit: number;
        pair: Pair;
      };
    }
  | {
      approve_admin_change: {};
    }
  | {
      admin: AdminMsgs;
    }
  | {
      server: ServerMsgs;
    };
export type Pair = [string, string];
export type AdminMsgs =
  | "cancel_admin_change"
  | {
      new_auction: {
        label: string;
        min_amount?: MinAmount | null;
        msg: InstantiateMsg;
      };
    }
  | {
      pause_auction: {
        pair: Pair;
      };
    }
  | {
      resume_auction: {
        pair: Pair;
      };
    }
  | {
      update_auction_id: {
        code_id: number;
      };
    }
  | {
      update_oracle: {
        oracle_addr: string;
      };
    }
  | {
      update_min_amount: {
        denom: string;
        min_amount: MinAmount;
      };
    }
  | {
      update_strategy: {
        pair: Pair;
        strategy: AuctionStrategy;
      };
    }
  | {
      update_chain_halt_config: {
        halt_config: ChainHaltConfig;
        pair: Pair;
      };
    }
  | {
      update_price_freshness_strategy: {
        pair: Pair;
        strategy: PriceFreshnessStrategy;
      };
    }
  | {
      migrate_auction: {
        code_id: number;
        msg: MigrateMsg;
        pair: Pair;
      };
    }
  | {
      change_server_addr: {
        addr: string;
      };
    }
  | {
      start_admin_change: {
        addr: string;
        expiration: Expiration;
      };
    };
export type Decimal = string;
export type MigrateMsg = {
  no_state_change: {};
};
export type Expiration =
  | {
      at_height: number;
    }
  | {
      at_time: Timestamp;
    }
  | {
      never: {};
    };
export type Timestamp = Uint64;
export type Uint64 = string;
export type ServerMsgs = {
  open_auction: {
    pair: Pair;
    params: NewAuctionParams;
  };
};
export interface AuctionStrategy {
  end_price_perc: number;
  start_price_perc: number;
}
export interface ChainHaltConfig {
  block_avg: Decimal;
  cap: number;
}
export interface PriceFreshnessStrategy {
  limit: Decimal;
  multipliers: [Decimal, Decimal][];
}
export interface NewAuctionParams {
  end_block: number;
  start_block?: number | null;
}
export type QueryMsg =
  | ("get_admin" | "get_server_addr")
  | {
      get_pairs: {
        limit?: number | null;
        start_after?: Pair | null;
      };
    }
  | {
      get_price: {
        pair: Pair;
      };
    }
  | {
      get_config: {
        pair: Pair;
      };
    }
  | {
      get_pair_addr: {
        pair: Pair;
      };
    }
  | "get_oracle_addr"
  | {
      get_min_limit: {
        denom: string;
      };
    };
export type Addr = string;
export interface AuctionConfig {
  chain_halt_config: ChainHaltConfig;
  is_paused: boolean;
  pair: Pair;
  price_freshness_strategy: PriceFreshnessStrategy;
}
export type ArrayOfTupleOfPairAndAddr = [Pair, Addr][];
export interface GetPriceResponse {
  price: Decimal;
  time: Timestamp;
}
