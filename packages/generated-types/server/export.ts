import fs from "fs";
import path from "path";

import { fileURLToPath } from "url";

// Convert module URL to file path
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
const exportFilePaths = ["./zod", "./types"];

// Output index file path
const outputFilePath = path.resolve(__dirname, "index.ts");

// Function to generate export statements for a directory
function generateExports(dir: string) {
  const files = fs.readdirSync(dir).filter((file) => file.endsWith(".ts"));
  return files
    .map((file) => {
      const moduleName = path.basename(file, ".ts");
      return `export * from './${path.relative(
        __dirname,
        path.join(dir, moduleName)
      )}';`;
    })
    .join("\n");
}

// Comment line to add at the beginning of the file
const commentLine =
  "// DO NOT MODIFY THIS FILE. AUTOGENERATED WITH PNPM SCRIPT.\n// Change export paths in script to add to index file. \n\n";

// Generate export statements for all directories
let indexContent = `${commentLine}\n`;
exportFilePaths.forEach((exportPath) => {
  const exportdir = path.resolve(__dirname, exportPath);
  indexContent += generateExports(exportdir) + "\n\n";
});

// Write the export statements to the index file
fs.writeFileSync(outputFilePath, indexContent);

console.log(`Index file generated at ${outputFilePath}`);
